// Makes a stack overflow
def foo():
  let a1;
  let a2;
  let a3;
  let a4;
  let a5;
  let a6;
  let a7;
  let a8;
  let a9;
  let a10;
  let a11;
  let a12;
  let a13;
  let a14;
  let a15;
  let a16;
  foo();
foo();

// Prints out nth fibonacci number up to n=20
def fib(n):
  if n <= 1:
    return n;
  return fib(n - 2) + fib(n - 1);
for i in 0..20:
  print(fib(i));


// Prints out 5, 4, 3, 2, 1, 0
def recursion(x) {
  print(x);
  if x == 0:
    return x;
  return recursion(x - 1);
}
recursion(5);


// Prints 1 to 10
def add(a, b) {
  return a + b;
}
var a = 1;
for i in 0..10:
  print(add(a, i));


// Prints 3
def add(a, b) {
  return a + b;
}
print(add(1, 2));


// Prints 3
def add(a, b) {
  print(a + b);
}
add(1, 2);


// Prints 3
def t(a) {
  print(a);
}
t(3);